imports:
    - { resource: graphql.yml }
    - { resource: services/api_platform.yml }

services:

    _defaults:
        autowire: true
        autoconfigure: true
        public: false


    # auto-register all commands as services
    Pimcore\Bundle\DataHubBundle\Command\:
        resource: '../../Command'

    Pimcore\Bundle\DataHubBundle\Controller\:
        resource: '../../Controller'
        public: true
        autowire: true
        autoconfigure: true
        tags: ['controller.service_arguments']

    # The migration installer needs the bundle it is operating on upon construction to be able to build its migration configuration.
    # As bundles can't be directly used as service argument, we need to make use of the expression language to fetch the bundle
    # from the kernel upon construction.
    Pimcore\Bundle\DataHubBundle\Installer:
        public: true
        arguments:
            # fetch the bundle via expression language
            $bundle: "@=service('kernel').getBundle('PimcoreDataHubBundle')"
